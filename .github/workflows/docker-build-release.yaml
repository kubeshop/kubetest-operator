name: Build and publish Docker image with a branch name tag
on:
  push:
    branches:
      - release_**
      - new-release-flow

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Output commit sha
        id: github_sha
        run: echo "::set-output name=sha_short::${GITHUB_SHA::7}"

      - name: Build images with GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release -f goreleaser/.goreleaser-snapshot.yaml --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

      - name: Push Docker images
        run: |
          docker push kubeshop/testkube-operator:${{ steps.github_sha.outputs.sha_short }}

      - name: Create a release branch in helm-chars repo
        run: |

          # Set up variables for repository and branch name
          REPO_OWNER=kubeshop
          REPO_NAME=helm-charts
          BRANCH_NAME=${GITHUB_REF}

          # Set up authentication using a personal access token
          AUTH_HEADER="Authorization: Bearer ${{ secrets.CI_BOT_TOKEN }}"

          # Check if branch already exists
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' -H "${AUTH_HEADER}" "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/branches/${BRANCH_NAME}")

          # If branch doesn't exist, create it
          if [ "${STATUS}" -eq 404 ]; then
            curl -X POST -H "${AUTH_HEADER}" -d '{"ref": "'"${BRANCH_NAME}"'","sha": "'"$(curl -s -H "${AUTH_HEADER}" "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/git/refs/heads/main" | jq -r '.object.sha')"'"}' "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/git/refs"
            echo "Created branch ${BRANCH_NAME} in ${REPO_OWNER}/${REPO_NAME}"
          else
            echo "Branch ${BRANCH_NAME} already exists in ${REPO_OWNER}/${REPO_NAME}"
          fi


#      #Trigger Helm repo workflow to deploy Operator to Stage cluster
#      - name: Repository Dispatch
#        uses: peter-evans/repository-dispatch@v2
#        with:
#          token: ${{ secrets.CI_BOT_TOKEN }}
#          repository: kubeshop/helm-charts
#          event-type: trigger-workflow-operator-release
#          client-payload: '{"image_tag_operator": "${{ steps.github_sha.outputs.sha_short }}"}'
