name: GoReleaser tag build
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Go Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Docker Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Release
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release -f .goreleaser.yml
        env:
          GITHUB_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
          DOCKER_BUILDX_BUILDER: "${{ steps.buildx.outputs.name }}"
          DOCKER_BUILDX_CACHE_FROM: "type=gha"
          DOCKER_BUILDX_CACHE_TO: "type=gha,mode=max"

      - name: getting Tag name
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Editing helm-release repo with version based on a Tag pushed.
        run: |

          # Setting up Git:

          git clone https://kubeshop-bot:$GH_PUSH_TOKEN@github.com/kubeshop/helm-charts
          cd ./helm-charts
          git config user.name "kubeshop-bot"
          git config user.email "kubeshop-bot@kubeshop.io"

          git fetch origin "release-$RELEASE_VERSION"
          git checkout "release-$RELEASE_VERSION"

          # Calling chart releaser script by passing needed folder name:
          # E.G. in order to relase api-server":
          # -->> ./chart_releaser.sh --helm-chart-folder api-server

          export GH_PUSH_TOKEN
          export RELEASE_VERSION

          cd ./scripts
          ./chart_releaser.sh --helm-chart-folder testkube-operator --main-chart false

        env:
          GH_PUSH_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
