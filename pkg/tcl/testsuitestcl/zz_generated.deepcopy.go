//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2024 Testkube.
//
// Licensed as a Testkube Pro file under the Testkube Community
// License (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//     https://github.com/kubeshop/testkube-operator/blob/main/licenses/TCL.txt

// Code generated by controller-gen. DO NOT EDIT.

package testsuitestcl

import (
	"github.com/kubeshop/testkube-operator/api/common/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestSuiteStepExecutionRequest) DeepCopyInto(out *TestSuiteStepExecutionRequest) {
	*out = *in
	if in.ExecutionLabels != nil {
		in, out := &in.ExecutionLabels, &out.ExecutionLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]Variable, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RunningContext != nil {
		in, out := &in.RunningContext, &out.RunningContext
		*out = new(v1.RunningContext)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestSuiteStepExecutionRequest.
func (in *TestSuiteStepExecutionRequest) DeepCopy() *TestSuiteStepExecutionRequest {
	if in == nil {
		return nil
	}
	out := new(TestSuiteStepExecutionRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Variable) DeepCopyInto(out *Variable) {
	*out = *in
	in.ValueFrom.DeepCopyInto(&out.ValueFrom)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Variable.
func (in *Variable) DeepCopy() *Variable {
	if in == nil {
		return nil
	}
	out := new(Variable)
	in.DeepCopyInto(out)
	return out
}
